/**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) {
 *      val = x;
 *      left=null;
 *      right=null;
 *     }
 * }
 */
public class Solution {
    ArrayList<Integer> list;
    int empty[] ={};
    public int[] inorderTraversal(TreeNode A) {
             initArray();
            if(A == null)
                return empty;
        Stack<TreeNode> st =new <TreeNode>Stack();
        TreeNode curr =A;
        while(curr != null && st.size()>0){
                
                while(curr !=null){
                     st.push(curr);
                    curr =curr.left;
                }
                curr= st.pop();
                list.add(curr.val);
                
                curr =curr.right;
                if(curr !=null)
                st.push(curr);
        }
    int a[] = new int[list.size()];
    for(int i=0;i<list.size();i++)
        a[i]=list.get(i);
        
        return a;
    }
    public void initArray(){
     list = new <Integer> ArrayList(); 
    }
}
