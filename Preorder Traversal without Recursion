/**
 * Definition for binary tree
 * class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) {
 *      val = x;
 *      left=null;
 *      right=null;
 *     }
 * }
 */
public class Solution {
    ArrayList<Integer> list;
    int empty[] ={};
    public int[] preorderTraversal(TreeNode A) {
             initArray();
             if(A == null)
                return empty;
        Stack<TreeNode> st =new <TreeNode>Stack();
            st.push(A);
        while(!st.isEmpty()){
                TreeNode curr =st.pop();
                  list.add(curr.val);
                  if(curr.right !=null)
                  st.push(curr.right);
                  if(curr.left !=null)
                  st.push(curr.left);
            }
    int a[] = new int[list.size()];
    for(int i=0;i<list.size();i++)
        a[i]=list.get(i);
        
        return a;
    }
    public void initArray(){
     list = new <Integer> ArrayList(); 
    }
}
